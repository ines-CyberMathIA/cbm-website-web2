{"ast":null,"code":"var _jsxFileName = \"/home/install/cybermathia/cbm-website-web2/client/src/components/teacher/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport config from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [availabilities, setAvailabilities] = useState([]);\n  const [unsavedAvailabilities, setUnsavedAvailabilities] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [saveStatus, setSaveStatus] = useState('');\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [newSlot, setNewSlot] = useState({\n    day: 'Lundi',\n    startTime: '08:00',\n    endTime: '09:30' // Par défaut 1h30\n  });\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [mode, setMode] = useState('view'); // 'view', 'add' ou 'delete'\n\n  const days = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'];\n\n  // Générer les créneaux de 30 minutes\n  const generateTimeSlots = () => {\n    const slots = [];\n    for (let hour = 6; hour <= 22; hour++) {\n      slots.push(`${hour.toString().padStart(2, '0')}:00`);\n      if (hour < 22) {\n        slots.push(`${hour.toString().padStart(2, '0')}:30`);\n      }\n    }\n    return slots;\n  };\n\n  // Modifier la fonction wouldMaintainMinimumDuration\n  const wouldMaintainMinimumDuration = (day, time, isAdding) => {\n    // Récupérer tous les créneaux du jour\n    let daySlots = [...availabilities, ...unsavedAvailabilities].filter(slot => slot.day === day).filter(slot => !slot.toDelete); // Ignorer les créneaux marqués pour suppression\n\n    // Simuler l'ajout ou la suppression\n    if (isAdding) {\n      daySlots.push({\n        day,\n        time\n      });\n    } else {\n      daySlots = daySlots.filter(slot => !(slot.day === day && slot.time === time));\n    }\n\n    // Trier les créneaux par heure\n    daySlots.sort((a, b) => a.time.localeCompare(b.time));\n\n    // Regrouper les créneaux consécutifs\n    let currentGroup = [];\n    const groups = [];\n    daySlots.forEach((slot, index) => {\n      if (currentGroup.length === 0) {\n        currentGroup.push(slot);\n      } else {\n        const lastSlot = currentGroup[currentGroup.length - 1];\n        const lastTime = new Date(`2000-01-01T${lastSlot.time}`);\n        const currentTime = new Date(`2000-01-01T${slot.time}`);\n        const diffMinutes = (currentTime - lastTime) / (1000 * 60);\n        if (diffMinutes === 30) {\n          currentGroup.push(slot);\n        } else {\n          groups.push([...currentGroup]);\n          currentGroup = [slot];\n        }\n      }\n    });\n    if (currentGroup.length > 0) {\n      groups.push(currentGroup);\n    }\n\n    // Si aucun groupe n'est trouvé, c'est valide (pas de contrainte à vérifier)\n    if (groups.length === 0) return true;\n\n    // Vérifier que chaque groupe fait au moins 1h30 (3 créneaux de 30 minutes)\n    return groups.every(group => group.length >= 3);\n  };\n\n  // Gérer le clic sur un créneau en fonction du mode\n  const handleTimeSlotClick = (day, time) => {\n    // Si on est en mode vue, ne rien faire\n    if (mode === 'view') return;\n\n    // En mode ajout, on ne peut cliquer que sur les cases vides\n    if (mode === 'add') {\n      const isAvailable = [...availabilities, ...unsavedAvailabilities].some(slot => slot.day === day && slot.time === time);\n      if (!isAvailable) {\n        // Vérifier si le créneau est déjà sélectionné\n        const isSelected = selectedSlots.some(slot => slot.day === day && slot.time === time);\n        if (isSelected) {\n          // Désélectionner le créneau\n          setSelectedSlots(prev => prev.filter(slot => !(slot.day === day && slot.time === time)));\n        } else {\n          // Sélectionner le créneau\n          setSelectedSlots(prev => [...prev, {\n            day,\n            time\n          }]);\n        }\n      }\n    }\n    // En mode suppression, on ne peut cliquer que sur les cases disponibles\n    else if (mode === 'delete') {\n      const isAvailable = availabilities.some(slot => slot.day === day && slot.time === time);\n      if (isAvailable) {\n        const isSelected = selectedSlots.some(slot => slot.day === day && slot.time === time);\n        if (isSelected) {\n          setSelectedSlots(prev => prev.filter(slot => !(slot.day === day && slot.time === time)));\n        } else {\n          setSelectedSlots(prev => [...prev, {\n            day,\n            time\n          }]);\n        }\n      }\n    }\n  };\n\n  // Vérifier si la suppression est valide\n  const isValidDeletion = () => {\n    // Créer une copie des disponibilités sans les créneaux sélectionnés\n    const remainingSlots = availabilities.filter(slot => !selectedSlots.some(selected => selected.day === slot.day && selected.time === slot.time));\n\n    // Convertir en plages horaires\n    const ranges = convertSlotsToRanges(remainingSlots);\n\n    // Vérifier que chaque plage fait au moins 1h30\n    return ranges.every(range => {\n      const start = new Date(`2000-01-01T${range.startTime}`);\n      const end = new Date(`2000-01-01T${range.endTime}`);\n      const duration = (end - start) / (1000 * 60); // durée en minutes\n      return duration >= 90; // 1h30 = 90 minutes\n    });\n  };\n\n  // Supprimer les créneaux sélectionnés\n  const handleDeleteSelection = () => {\n    if (selectedSlots.length === 0) {\n      setError(\"Aucun créneau sélectionné\");\n      return;\n    }\n    if (!isValidDeletion()) {\n      setError(\"La suppression créerait une ou plusieurs plages horaires inférieures à 1h30\");\n      return;\n    }\n\n    // Supprimer les créneaux sélectionnés\n    const newAvailabilities = availabilities.filter(slot => !selectedSlots.some(selected => selected.day === slot.day && selected.time === slot.time));\n    setAvailabilities(newAvailabilities);\n    setSelectedSlots([]); // Réinitialiser la sélection\n    setError(null);\n\n    // Marquer les modifications comme non sauvegardées\n    setUnsavedAvailabilities([...unsavedAvailabilities, ...selectedSlots.map(slot => ({\n      ...slot,\n      toDelete: true\n    }))]);\n  };\n\n  // Charger les disponibilités au montage du composant\n  useEffect(() => {\n    const fetchAvailabilities = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${config.API_URL}/api/teacher/availabilities`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        // Convertir les disponibilités en format de créneaux de 30 minutes\n        const slots = [];\n        response.data.forEach(availability => {\n          const start = availability.startTime;\n          const end = availability.endTime;\n          let currentTime = start;\n          while (currentTime < end) {\n            slots.push({\n              day: availability.day,\n              time: currentTime\n            });\n            // Ajouter 30 minutes\n            const [hours, minutes] = currentTime.split(':');\n            const date = new Date(2000, 0, 1, parseInt(hours), parseInt(minutes));\n            date.setMinutes(date.getMinutes() + 30);\n            currentTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n          }\n        });\n        setAvailabilities(slots);\n      } catch (error) {\n        console.error('Erreur lors du chargement des disponibilités:', error);\n        setError('Erreur lors du chargement des disponibilités');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAvailabilities();\n  }, []);\n\n  // Fonction pour convertir les créneaux en plages horaires pour la sauvegarde\n  const convertSlotsToRanges = slots => {\n    const ranges = [];\n    const slotsByDay = {};\n\n    // Grouper les créneaux par jour\n    slots.forEach(slot => {\n      if (!slotsByDay[slot.day]) {\n        slotsByDay[slot.day] = [];\n      }\n      slotsByDay[slot.day].push(slot.time);\n    });\n\n    // Pour chaque jour\n    Object.entries(slotsByDay).forEach(([day, times]) => {\n      // Trier les horaires\n      times.sort();\n      let startTime = null;\n      let lastTime = null;\n      let currentGroup = [];\n      times.forEach(time => {\n        if (currentGroup.length === 0) {\n          currentGroup.push(time);\n          startTime = time;\n          lastTime = time;\n        } else {\n          const lastDate = new Date(`2000-01-01T${lastTime}`);\n          const currentDate = new Date(`2000-01-01T${time}`);\n          const diffMinutes = (currentDate - lastDate) / (1000 * 60);\n          if (diffMinutes === 30) {\n            // Créneau consécutif\n            currentGroup.push(time);\n            lastTime = time;\n          } else {\n            // Nouveau groupe si le créneau n'est pas consécutif\n            if (currentGroup.length >= 3) {\n              // Au moins 1h30 (3 créneaux de 30min)\n              ranges.push({\n                day,\n                startTime: startTime,\n                endTime: addMinutes(lastTime, 30)\n              });\n            }\n            currentGroup = [time];\n            startTime = time;\n            lastTime = time;\n          }\n        }\n      });\n\n      // Traiter le dernier groupe\n      if (currentGroup.length >= 3) {\n        ranges.push({\n          day,\n          startTime: startTime,\n          endTime: addMinutes(lastTime, 30)\n        });\n      }\n    });\n    return ranges;\n  };\n\n  // Fonction utilitaire pour ajouter des minutes à une heure\n  const addMinutes = (time, minutes) => {\n    const [hours, mins] = time.split(':').map(Number);\n    const date = new Date(2000, 0, 1, hours, mins);\n    date.setMinutes(date.getMinutes() + minutes);\n    return `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n  };\n\n  // Modifier la fonction de sauvegarde\n  const saveAvailabilities = async () => {\n    try {\n      setSaveStatus('saving');\n\n      // Créer une copie des disponibilités actuelles\n      let newAvailabilities = [...availabilities];\n\n      // En mode ajout, ajouter les créneaux sélectionnés\n      if (mode === 'add' && selectedSlots.length > 0) {\n        // Ajouter directement les nouveaux créneaux\n        newAvailabilities = [...availabilities, ...selectedSlots];\n      }\n      // En mode suppression, retirer les créneaux sélectionnés\n      else if (mode === 'delete' && selectedSlots.length > 0) {\n        newAvailabilities = availabilities.filter(slot => !selectedSlots.some(selected => selected.day === slot.day && selected.time === slot.time));\n      }\n\n      // Convertir en plages horaires pour la sauvegarde\n      const ranges = convertSlotsToRanges(newAvailabilities);\n\n      // Vérifier que chaque plage fait au moins 1h30\n      const isValid = ranges.every(range => {\n        const start = new Date(`2000-01-01T${range.startTime}`);\n        const end = new Date(`2000-01-01T${range.endTime}`);\n        const duration = (end - start) / (1000 * 60); // durée en minutes\n        return duration >= 90; // 1h30 = 90 minutes\n      });\n      if (!isValid) {\n        setError(\"Les plages horaires doivent faire au moins 1h30\");\n        setSaveStatus('error');\n        return;\n      }\n\n      // Envoyer au serveur\n      await axios.post(`${config.API_URL}/api/teacher/availabilities`, {\n        availabilities: ranges\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      // Mettre à jour l'état local\n      setAvailabilities(newAvailabilities);\n      setSelectedSlots([]);\n      setUnsavedAvailabilities([]);\n      setMode('view');\n      setSaveStatus('saved');\n      setTimeout(() => setSaveStatus(''), 3000);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Erreur lors de la sauvegarde:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erreur lors de la sauvegarde');\n      setSaveStatus('error');\n    }\n  };\n\n  // Fonction utilitaire pour grouper les créneaux par jour\n  const groupSlotsByDay = slots => {\n    const groups = {};\n    slots.forEach(slot => {\n      if (!groups[slot.day]) {\n        groups[slot.day] = [];\n      }\n      groups[slot.day].push(slot);\n    });\n\n    // Trier les créneaux de chaque jour\n    for (const day in groups) {\n      groups[day].sort((a, b) => a.time.localeCompare(b.time));\n    }\n    return groups;\n  };\n\n  // Fonction pour obtenir les groupes de créneaux consécutifs\n  const getConsecutiveGroups = slots => {\n    const groups = [];\n    let currentGroup = [];\n    slots.forEach((slot, index) => {\n      if (currentGroup.length === 0) {\n        currentGroup.push(slot);\n      } else {\n        const lastSlot = currentGroup[currentGroup.length - 1];\n        const lastTime = new Date(`2000-01-01T${lastSlot.time}`);\n        const currentTime = new Date(`2000-01-01T${slot.time}`);\n        const diffMinutes = (currentTime - lastTime) / (1000 * 60);\n        if (diffMinutes === 30) {\n          currentGroup.push(slot);\n        } else {\n          groups.push([...currentGroup]);\n          currentGroup = [slot];\n        }\n      }\n    });\n    if (currentGroup.length > 0) {\n      groups.push(currentGroup);\n    }\n    return groups;\n  };\n\n  // Gérer le clic sur un créneau sauvegardé\n  const handleSavedSlotClick = (day, time) => {\n    const isAvailable = availabilities.some(slot => slot.day === day && slot.time === time);\n    if (!isAvailable) return;\n\n    // Vérifier si la suppression maintient la durée minimale\n    if (!wouldMaintainMinimumDuration(day, time, false)) {\n      setError(\"La suppression de ce créneau créerait une plage horaire inférieure à 1h30\");\n      return;\n    }\n\n    // Déplacer le créneau vers les non sauvegardés pour marquer la modification\n    setAvailabilities(availabilities.filter(slot => !(slot.day === day && slot.time === time)));\n    setUnsavedAvailabilities([...unsavedAvailabilities, {\n      day,\n      time,\n      isRemoval: true\n    }]);\n    setError(null);\n  };\n\n  // Modifier la fonction handleAddAvailability\n  const handleAddAvailability = () => {\n    const {\n      day,\n      startTime,\n      endTime\n    } = newSlot;\n\n    // Convertir les heures au format HH:mm\n    const formatTime = time => {\n      return time.replace('h', ':').padStart(5, '0');\n    };\n    const formattedStartTime = formatTime(startTime);\n    const formattedEndTime = formatTime(endTime);\n\n    // Vérifier que l'heure de fin ne dépasse pas 22:00\n    if (formattedEndTime > '22:00') {\n      setError(\"L'heure de fin ne peut pas dépasser 22h00\");\n      return;\n    }\n\n    // Vérifier la durée minimale de 1h30\n    const start = new Date(`2000-01-01T${formattedStartTime}`);\n    const end = new Date(`2000-01-01T${formattedEndTime}`);\n    const duration = (end - start) / (1000 * 60); // durée en minutes\n\n    if (duration < 90) {\n      setError(\"La durée minimale d'une disponibilité doit être de 1h30\");\n      return;\n    }\n\n    // Créer les créneaux de 30 minutes\n    const slots = [];\n    let currentTime = formattedStartTime;\n    while (new Date(`2000-01-01T${currentTime}`) < new Date(`2000-01-01T${formattedEndTime}`)) {\n      slots.push({\n        day,\n        time: currentTime,\n        isNew: true // Marquer comme nouveau créneau\n      });\n\n      // Ajouter 30 minutes\n      const [hours, minutes] = currentTime.split(':').map(Number);\n      const date = new Date(2000, 0, 1, hours, minutes);\n      date.setMinutes(date.getMinutes() + 30);\n      currentTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n    }\n\n    // Ajouter les créneaux aux disponibilités non sauvegardées\n    setUnsavedAvailabilities(prev => [...prev, ...slots]);\n    setShowAddModal(false);\n    setError(null);\n  };\n\n  // Modifier le useEffect pour le timer du message d'erreur\n  useEffect(() => {\n    let timer;\n    if (error) {\n      timer = setTimeout(() => {\n        setError(null);\n      }, 15000); // 15 secondes au lieu de 30\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center bg-white p-4 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-900\",\n          children: \"Planning des disponibilit\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setMode('add');\n              setSelectedSlots([]);\n            },\n            className: `px-4 py-2 rounded-md flex items-center ${mode === 'add' ? 'bg-indigo-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5 mr-2\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this), \"Ajouter des disponibilit\\xE9s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setMode('delete');\n              setUnsavedAvailabilities([]);\n            },\n            className: `px-4 py-2 rounded-md flex items-center ${mode === 'delete' ? 'bg-red-600 text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-5 h-5 mr-2\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this), \"Supprimer des disponibilit\\xE9s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), (mode !== 'view' || selectedSlots.length > 0 || unsavedAvailabilities.length > 0) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setMode('view');\n              setSelectedSlots([]);\n              setUnsavedAvailabilities([]);\n            },\n            className: \"px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200\",\n            children: \"Annuler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [saveStatus === 'saving' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-600\",\n          children: \"Sauvegarde en cours...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this), saveStatus === 'saved' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-green-600\",\n          children: \"Sauvegard\\xE9 \\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this), saveStatus === 'error' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-600\",\n          children: \"Erreur de sauvegarde !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this), (selectedSlots.length > 0 || unsavedAvailabilities.length > 0) && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveAvailabilities,\n          className: \"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\",\n          disabled: saveStatus === 'saving',\n          children: \"Sauvegarder les modifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 border-l-4 border-red-400 p-4 text-red-700\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-8 border-b\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-r\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), days.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center font-semibold py-2 border-r last:border-r-0\",\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-y-auto max-h-[600px]\",\n        children: generateTimeSlots().map(time => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-8 border-b last:border-b-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-r p-2 text-sm font-medium bg-gray-100 text-gray-700 flex items-center justify-center\",\n            children: time.replace(':', 'h')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 15\n          }, this), days.map(day => {\n            const isSelected = [...availabilities, ...unsavedAvailabilities].some(slot => slot.day === day && slot.time === time);\n            const isSaved = availabilities.some(slot => slot.day === day && slot.time === time);\n            const hasCourse = courses.some(c => c.day === day && c.time === time);\n            const isAvailable = availabilities.some(slot => slot.day === day && slot.time === time);\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => !hasCourse && handleTimeSlotClick(day, time),\n              disabled: hasCourse || mode === 'delete' && !isAvailable,\n              className: `\n                      border-r last:border-r-0 p-2 min-h-[30px] transition-all duration-200\n                      ${hasCourse ? 'bg-blue-100 cursor-not-allowed' : mode === 'delete' && selectedSlots.some(slot => slot.day === day && slot.time === time) ? 'bg-red-100 hover:bg-red-200 border-2 border-red-500' // Sélectionné pour suppression\n              : mode === 'add' && selectedSlots.some(slot => slot.day === day && slot.time === time) ? 'bg-emerald-50 hover:bg-emerald-100 border-2 border-emerald-500' // Sélectionné pour ajout\n              : isAvailable ? 'bg-emerald-100 hover:bg-emerald-200 border-l-4 border-emerald-500' // Disponible\n              : mode === 'add' ? 'hover:bg-emerald-50 cursor-pointer' // Mode ajout\n              : '' // Mode normal\n              }\n                      ${mode === 'delete' && !isAvailable ? 'cursor-not-allowed opacity-50' : ''}\n                    `,\n              children: hasCourse && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs bg-blue-200 text-blue-800 rounded-lg px-2 py-1\",\n                children: \"Cours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 23\n              }, this)\n            }, `${day}-${time}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 19\n            }, this);\n          })]\n        }, time, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-medium mb-3 text-gray-700\",\n        children: \"L\\xE9gende\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-6 h-6 bg-white border rounded-md mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Non disponible\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-6 h-6 bg-emerald-50 rounded-md mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"S\\xE9lectionn\\xE9 (non sauvegard\\xE9)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-6 h-6 bg-emerald-100 rounded-md mr-2 border-l-4 border-emerald-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Disponible (sauvegard\\xE9)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-6 h-6 bg-red-50 rounded-md mr-2 border-l-4 border-red-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"\\xC0 supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-6 h-6 bg-blue-100 rounded-md mr-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-[8px] text-center text-blue-800 font-medium\",\n              children: \"Cours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Cours r\\xE9serv\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-6 h-6 bg-yellow-100 rounded-md mr-2 border-2 border-yellow-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"S\\xE9lectionn\\xE9 pour suppression\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 7\n    }, this), showAddModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg p-6 max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium mb-4\",\n          children: \"Ajouter une disponibilit\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Jour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newSlot.day,\n              onChange: e => setNewSlot({\n                ...newSlot,\n                day: e.target.value\n              }),\n              className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\",\n              children: days.map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: day,\n                children: day\n              }, day, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Heure de d\\xE9but\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newSlot.startTime.replace(':', 'h'),\n              onChange: e => {\n                const value = e.target.value.replace('h', ':');\n                setNewSlot({\n                  ...newSlot,\n                  startTime: value\n                });\n              },\n              placeholder: \"14h30\",\n              className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Heure de fin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newSlot.endTime.replace(':', 'h'),\n              onChange: e => {\n                const value = e.target.value.replace('h', ':');\n                setNewSlot({\n                  ...newSlot,\n                  endTime: value\n                });\n              },\n              placeholder: \"16h00\",\n              className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-gray-500\",\n              children: \"Dur\\xE9e minimale : 1h30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowAddModal(false),\n              className: \"px-4 py-2 border rounded-md text-gray-700 hover:bg-gray-50\",\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddAvailability,\n              className: \"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\",\n              children: \"Ajouter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 486,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"8+n8qnIAxdE+kr5NlcYXmLeGwW8=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","axios","config","jsxDEV","_jsxDEV","Calendar","_s","availabilities","setAvailabilities","unsavedAvailabilities","setUnsavedAvailabilities","courses","setCourses","loading","setLoading","error","setError","saveStatus","setSaveStatus","showAddModal","setShowAddModal","newSlot","setNewSlot","day","startTime","endTime","selectedSlots","setSelectedSlots","mode","setMode","days","generateTimeSlots","slots","hour","push","toString","padStart","wouldMaintainMinimumDuration","time","isAdding","daySlots","filter","slot","toDelete","sort","a","b","localeCompare","currentGroup","groups","forEach","index","length","lastSlot","lastTime","Date","currentTime","diffMinutes","every","group","handleTimeSlotClick","isAvailable","some","isSelected","prev","isValidDeletion","remainingSlots","selected","ranges","convertSlotsToRanges","range","start","end","duration","handleDeleteSelection","newAvailabilities","map","fetchAvailabilities","response","get","API_URL","headers","Authorization","localStorage","getItem","data","availability","hours","minutes","split","date","parseInt","setMinutes","getMinutes","String","getHours","console","slotsByDay","Object","entries","times","lastDate","currentDate","addMinutes","mins","Number","saveAvailabilities","isValid","post","setTimeout","_error$response","_error$response$data","message","groupSlotsByDay","getConsecutiveGroups","handleSavedSlotClick","isRemoval","handleAddAvailability","formatTime","replace","formattedStartTime","formattedEndTime","isNew","timer","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","disabled","isSaved","hasCourse","c","value","onChange","e","target","type","placeholder","_c","$RefreshReg$"],"sources":["/home/install/cybermathia/cbm-website-web2/client/src/components/teacher/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport config from '../../config';\n\nconst Calendar = () => {\n  const [availabilities, setAvailabilities] = useState([]);\n  const [unsavedAvailabilities, setUnsavedAvailabilities] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [saveStatus, setSaveStatus] = useState('');\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [newSlot, setNewSlot] = useState({\n    day: 'Lundi',\n    startTime: '08:00',\n    endTime: '09:30'  // Par défaut 1h30\n  });\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [mode, setMode] = useState('view'); // 'view', 'add' ou 'delete'\n\n  const days = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'];\n  \n  // Générer les créneaux de 30 minutes\n  const generateTimeSlots = () => {\n    const slots = [];\n    for (let hour = 6; hour <= 22; hour++) {\n      slots.push(`${hour.toString().padStart(2, '0')}:00`);\n      if (hour < 22) {\n        slots.push(`${hour.toString().padStart(2, '0')}:30`);\n      }\n    }\n    return slots;\n  };\n\n  // Modifier la fonction wouldMaintainMinimumDuration\n  const wouldMaintainMinimumDuration = (day, time, isAdding) => {\n    // Récupérer tous les créneaux du jour\n    let daySlots = [...availabilities, ...unsavedAvailabilities]\n      .filter(slot => slot.day === day)\n      .filter(slot => !slot.toDelete); // Ignorer les créneaux marqués pour suppression\n\n    // Simuler l'ajout ou la suppression\n    if (isAdding) {\n      daySlots.push({ day, time });\n    } else {\n      daySlots = daySlots.filter(slot => !(slot.day === day && slot.time === time));\n    }\n\n    // Trier les créneaux par heure\n    daySlots.sort((a, b) => a.time.localeCompare(b.time));\n\n    // Regrouper les créneaux consécutifs\n    let currentGroup = [];\n    const groups = [];\n\n    daySlots.forEach((slot, index) => {\n      if (currentGroup.length === 0) {\n        currentGroup.push(slot);\n      } else {\n        const lastSlot = currentGroup[currentGroup.length - 1];\n        const lastTime = new Date(`2000-01-01T${lastSlot.time}`);\n        const currentTime = new Date(`2000-01-01T${slot.time}`);\n        const diffMinutes = (currentTime - lastTime) / (1000 * 60);\n\n        if (diffMinutes === 30) {\n          currentGroup.push(slot);\n        } else {\n          groups.push([...currentGroup]);\n          currentGroup = [slot];\n        }\n      }\n    });\n\n    if (currentGroup.length > 0) {\n      groups.push(currentGroup);\n    }\n\n    // Si aucun groupe n'est trouvé, c'est valide (pas de contrainte à vérifier)\n    if (groups.length === 0) return true;\n\n    // Vérifier que chaque groupe fait au moins 1h30 (3 créneaux de 30 minutes)\n    return groups.every(group => group.length >= 3);\n  };\n\n  // Gérer le clic sur un créneau en fonction du mode\n  const handleTimeSlotClick = (day, time) => {\n    // Si on est en mode vue, ne rien faire\n    if (mode === 'view') return;\n\n    // En mode ajout, on ne peut cliquer que sur les cases vides\n    if (mode === 'add') {\n      const isAvailable = [...availabilities, ...unsavedAvailabilities]\n        .some(slot => slot.day === day && slot.time === time);\n      \n      if (!isAvailable) {\n        // Vérifier si le créneau est déjà sélectionné\n        const isSelected = selectedSlots.some(slot => slot.day === day && slot.time === time);\n        \n        if (isSelected) {\n          // Désélectionner le créneau\n          setSelectedSlots(prev => prev.filter(slot => !(slot.day === day && slot.time === time)));\n        } else {\n          // Sélectionner le créneau\n          setSelectedSlots(prev => [...prev, { day, time }]);\n        }\n      }\n    }\n    // En mode suppression, on ne peut cliquer que sur les cases disponibles\n    else if (mode === 'delete') {\n      const isAvailable = availabilities\n        .some(slot => slot.day === day && slot.time === time);\n      \n      if (isAvailable) {\n        const isSelected = selectedSlots\n          .some(slot => slot.day === day && slot.time === time);\n\n        if (isSelected) {\n          setSelectedSlots(prev => \n            prev.filter(slot => !(slot.day === day && slot.time === time))\n          );\n        } else {\n          setSelectedSlots(prev => [...prev, { day, time }]);\n        }\n      }\n    }\n  };\n\n  // Vérifier si la suppression est valide\n  const isValidDeletion = () => {\n    // Créer une copie des disponibilités sans les créneaux sélectionnés\n    const remainingSlots = availabilities\n      .filter(slot => !selectedSlots.some(\n        selected => selected.day === slot.day && selected.time === slot.time\n      ));\n\n    // Convertir en plages horaires\n    const ranges = convertSlotsToRanges(remainingSlots);\n\n    // Vérifier que chaque plage fait au moins 1h30\n    return ranges.every(range => {\n      const start = new Date(`2000-01-01T${range.startTime}`);\n      const end = new Date(`2000-01-01T${range.endTime}`);\n      const duration = (end - start) / (1000 * 60); // durée en minutes\n      return duration >= 90; // 1h30 = 90 minutes\n    });\n  };\n\n  // Supprimer les créneaux sélectionnés\n  const handleDeleteSelection = () => {\n    if (selectedSlots.length === 0) {\n      setError(\"Aucun créneau sélectionné\");\n      return;\n    }\n\n    if (!isValidDeletion()) {\n      setError(\"La suppression créerait une ou plusieurs plages horaires inférieures à 1h30\");\n      return;\n    }\n\n    // Supprimer les créneaux sélectionnés\n    const newAvailabilities = availabilities.filter(slot => \n      !selectedSlots.some(selected => \n        selected.day === slot.day && selected.time === slot.time\n      )\n    );\n\n    setAvailabilities(newAvailabilities);\n    setSelectedSlots([]); // Réinitialiser la sélection\n    setError(null);\n    \n    // Marquer les modifications comme non sauvegardées\n    setUnsavedAvailabilities([\n      ...unsavedAvailabilities,\n      ...selectedSlots.map(slot => ({ ...slot, toDelete: true }))\n    ]);\n  };\n\n  // Charger les disponibilités au montage du composant\n  useEffect(() => {\n    const fetchAvailabilities = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${config.API_URL}/api/teacher/availabilities`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        // Convertir les disponibilités en format de créneaux de 30 minutes\n        const slots = [];\n        response.data.forEach(availability => {\n          const start = availability.startTime;\n          const end = availability.endTime;\n          let currentTime = start;\n          while (currentTime < end) {\n            slots.push({\n              day: availability.day,\n              time: currentTime\n            });\n            // Ajouter 30 minutes\n            const [hours, minutes] = currentTime.split(':');\n            const date = new Date(2000, 0, 1, parseInt(hours), parseInt(minutes));\n            date.setMinutes(date.getMinutes() + 30);\n            currentTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n          }\n        });\n        setAvailabilities(slots);\n      } catch (error) {\n        console.error('Erreur lors du chargement des disponibilités:', error);\n        setError('Erreur lors du chargement des disponibilités');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAvailabilities();\n  }, []);\n\n  // Fonction pour convertir les créneaux en plages horaires pour la sauvegarde\n  const convertSlotsToRanges = (slots) => {\n    const ranges = [];\n    const slotsByDay = {};\n\n    // Grouper les créneaux par jour\n    slots.forEach(slot => {\n      if (!slotsByDay[slot.day]) {\n        slotsByDay[slot.day] = [];\n      }\n      slotsByDay[slot.day].push(slot.time);\n    });\n\n    // Pour chaque jour\n    Object.entries(slotsByDay).forEach(([day, times]) => {\n      // Trier les horaires\n      times.sort();\n      \n      let startTime = null;\n      let lastTime = null;\n      let currentGroup = [];\n\n      times.forEach(time => {\n        if (currentGroup.length === 0) {\n          currentGroup.push(time);\n          startTime = time;\n          lastTime = time;\n        } else {\n          const lastDate = new Date(`2000-01-01T${lastTime}`);\n          const currentDate = new Date(`2000-01-01T${time}`);\n          const diffMinutes = (currentDate - lastDate) / (1000 * 60);\n\n          if (diffMinutes === 30) {\n            // Créneau consécutif\n            currentGroup.push(time);\n            lastTime = time;\n          } else {\n            // Nouveau groupe si le créneau n'est pas consécutif\n            if (currentGroup.length >= 3) { // Au moins 1h30 (3 créneaux de 30min)\n              ranges.push({\n                day,\n                startTime: startTime,\n                endTime: addMinutes(lastTime, 30)\n              });\n            }\n            currentGroup = [time];\n            startTime = time;\n            lastTime = time;\n          }\n        }\n      });\n\n      // Traiter le dernier groupe\n      if (currentGroup.length >= 3) {\n        ranges.push({\n          day,\n          startTime: startTime,\n          endTime: addMinutes(lastTime, 30)\n        });\n      }\n    });\n\n    return ranges;\n  };\n\n  // Fonction utilitaire pour ajouter des minutes à une heure\n  const addMinutes = (time, minutes) => {\n    const [hours, mins] = time.split(':').map(Number);\n    const date = new Date(2000, 0, 1, hours, mins);\n    date.setMinutes(date.getMinutes() + minutes);\n    return `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n  };\n\n  // Modifier la fonction de sauvegarde\n  const saveAvailabilities = async () => {\n    try {\n      setSaveStatus('saving');\n\n      // Créer une copie des disponibilités actuelles\n      let newAvailabilities = [...availabilities];\n\n      // En mode ajout, ajouter les créneaux sélectionnés\n      if (mode === 'add' && selectedSlots.length > 0) {\n        // Ajouter directement les nouveaux créneaux\n        newAvailabilities = [...availabilities, ...selectedSlots];\n      }\n      // En mode suppression, retirer les créneaux sélectionnés\n      else if (mode === 'delete' && selectedSlots.length > 0) {\n        newAvailabilities = availabilities.filter(slot => \n          !selectedSlots.some(selected => \n            selected.day === slot.day && selected.time === slot.time\n          )\n        );\n      }\n\n      // Convertir en plages horaires pour la sauvegarde\n      const ranges = convertSlotsToRanges(newAvailabilities);\n      \n      // Vérifier que chaque plage fait au moins 1h30\n      const isValid = ranges.every(range => {\n        const start = new Date(`2000-01-01T${range.startTime}`);\n        const end = new Date(`2000-01-01T${range.endTime}`);\n        const duration = (end - start) / (1000 * 60); // durée en minutes\n        return duration >= 90; // 1h30 = 90 minutes\n      });\n\n      if (!isValid) {\n        setError(\"Les plages horaires doivent faire au moins 1h30\");\n        setSaveStatus('error');\n        return;\n      }\n\n      // Envoyer au serveur\n      await axios.post(\n        `${config.API_URL}/api/teacher/availabilities`,\n        { availabilities: ranges },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        }\n      );\n      \n      // Mettre à jour l'état local\n      setAvailabilities(newAvailabilities);\n      setSelectedSlots([]);\n      setUnsavedAvailabilities([]);\n      setMode('view');\n      setSaveStatus('saved');\n      setTimeout(() => setSaveStatus(''), 3000);\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde:', error);\n      setError(error.response?.data?.message || 'Erreur lors de la sauvegarde');\n      setSaveStatus('error');\n    }\n  };\n\n  // Fonction utilitaire pour grouper les créneaux par jour\n  const groupSlotsByDay = (slots) => {\n    const groups = {};\n    slots.forEach(slot => {\n      if (!groups[slot.day]) {\n        groups[slot.day] = [];\n      }\n      groups[slot.day].push(slot);\n    });\n    \n    // Trier les créneaux de chaque jour\n    for (const day in groups) {\n      groups[day].sort((a, b) => a.time.localeCompare(b.time));\n    }\n    \n    return groups;\n  };\n\n  // Fonction pour obtenir les groupes de créneaux consécutifs\n  const getConsecutiveGroups = (slots) => {\n    const groups = [];\n    let currentGroup = [];\n\n    slots.forEach((slot, index) => {\n      if (currentGroup.length === 0) {\n        currentGroup.push(slot);\n      } else {\n        const lastSlot = currentGroup[currentGroup.length - 1];\n        const lastTime = new Date(`2000-01-01T${lastSlot.time}`);\n        const currentTime = new Date(`2000-01-01T${slot.time}`);\n        const diffMinutes = (currentTime - lastTime) / (1000 * 60);\n\n        if (diffMinutes === 30) {\n          currentGroup.push(slot);\n        } else {\n          groups.push([...currentGroup]);\n          currentGroup = [slot];\n        }\n      }\n    });\n\n    if (currentGroup.length > 0) {\n      groups.push(currentGroup);\n    }\n\n    return groups;\n  };\n\n  // Gérer le clic sur un créneau sauvegardé\n  const handleSavedSlotClick = (day, time) => {\n    const isAvailable = availabilities.some(slot => slot.day === day && slot.time === time);\n    if (!isAvailable) return;\n\n    // Vérifier si la suppression maintient la durée minimale\n    if (!wouldMaintainMinimumDuration(day, time, false)) {\n      setError(\"La suppression de ce créneau créerait une plage horaire inférieure à 1h30\");\n      return;\n    }\n\n    // Déplacer le créneau vers les non sauvegardés pour marquer la modification\n    setAvailabilities(availabilities.filter(slot => !(slot.day === day && slot.time === time)));\n    setUnsavedAvailabilities([...unsavedAvailabilities, { day, time, isRemoval: true }]);\n    setError(null);\n  };\n\n  // Modifier la fonction handleAddAvailability\n  const handleAddAvailability = () => {\n    const { day, startTime, endTime } = newSlot;\n\n    // Convertir les heures au format HH:mm\n    const formatTime = (time) => {\n      return time.replace('h', ':').padStart(5, '0');\n    };\n\n    const formattedStartTime = formatTime(startTime);\n    const formattedEndTime = formatTime(endTime);\n\n    // Vérifier que l'heure de fin ne dépasse pas 22:00\n    if (formattedEndTime > '22:00') {\n      setError(\"L'heure de fin ne peut pas dépasser 22h00\");\n      return;\n    }\n\n    // Vérifier la durée minimale de 1h30\n    const start = new Date(`2000-01-01T${formattedStartTime}`);\n    const end = new Date(`2000-01-01T${formattedEndTime}`);\n    const duration = (end - start) / (1000 * 60); // durée en minutes\n\n    if (duration < 90) {\n      setError(\"La durée minimale d'une disponibilité doit être de 1h30\");\n      return;\n    }\n\n    // Créer les créneaux de 30 minutes\n    const slots = [];\n    let currentTime = formattedStartTime;\n    \n    while (new Date(`2000-01-01T${currentTime}`) < new Date(`2000-01-01T${formattedEndTime}`)) {\n      slots.push({\n        day,\n        time: currentTime,\n        isNew: true  // Marquer comme nouveau créneau\n      });\n      \n      // Ajouter 30 minutes\n      const [hours, minutes] = currentTime.split(':').map(Number);\n      const date = new Date(2000, 0, 1, hours, minutes);\n      date.setMinutes(date.getMinutes() + 30);\n      currentTime = `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n    }\n\n    // Ajouter les créneaux aux disponibilités non sauvegardées\n    setUnsavedAvailabilities(prev => [...prev, ...slots]);\n    setShowAddModal(false);\n    setError(null);\n  };\n\n  // Modifier le useEffect pour le timer du message d'erreur\n  useEffect(() => {\n    let timer;\n    if (error) {\n      timer = setTimeout(() => {\n        setError(null);\n      }, 15000); // 15 secondes au lieu de 30\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [error]);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* En-tête avec boutons de mode */}\n      <div className=\"flex justify-between items-center bg-white p-4 rounded-lg shadow\">\n        <div className=\"flex items-center space-x-4\">\n          <h2 className=\"text-2xl font-bold text-gray-900\">\n            Planning des disponibilités\n          </h2>\n          <div className=\"flex space-x-2\">\n            <button\n              onClick={() => {\n                setMode('add');\n                setSelectedSlots([]);\n              }}\n              className={`px-4 py-2 rounded-md flex items-center ${\n                mode === 'add'\n                  ? 'bg-indigo-600 text-white'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <svg className=\"w-5 h-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              Ajouter des disponibilités\n            </button>\n            <button\n              onClick={() => {\n                setMode('delete');\n                setUnsavedAvailabilities([]);\n              }}\n              className={`px-4 py-2 rounded-md flex items-center ${\n                mode === 'delete'\n                  ? 'bg-red-600 text-white'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <svg className=\"w-5 h-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n              </svg>\n              Supprimer des disponibilités\n            </button>\n            {(mode !== 'view' || selectedSlots.length > 0 || unsavedAvailabilities.length > 0) && (\n              <button\n                onClick={() => {\n                  setMode('view');\n                  setSelectedSlots([]);\n                  setUnsavedAvailabilities([]);\n                }}\n                className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200\"\n              >\n                Annuler\n              </button>\n            )}\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          {saveStatus === 'saving' && (\n            <span className=\"text-gray-600\">Sauvegarde en cours...</span>\n          )}\n          {saveStatus === 'saved' && (\n            <span className=\"text-green-600\">Sauvegardé ✓</span>\n          )}\n          {saveStatus === 'error' && (\n            <span className=\"text-red-600\">Erreur de sauvegarde !</span>\n          )}\n          {(selectedSlots.length > 0 || unsavedAvailabilities.length > 0) && (\n            <button\n              onClick={saveAvailabilities}\n              className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\n              disabled={saveStatus === 'saving'}\n            >\n              Sauvegarder les modifications\n            </button>\n          )}\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border-l-4 border-red-400 p-4 text-red-700\">\n          {error}\n        </div>\n      )}\n\n      {/* Grille du calendrier */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <div className=\"grid grid-cols-8 border-b\">\n          <div className=\"border-r\"></div>\n          {days.map(day => (\n            <div key={day} className=\"text-center font-semibold py-2 border-r last:border-r-0\">\n              {day}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"overflow-y-auto max-h-[600px]\">\n          {generateTimeSlots().map(time => (\n            <div key={time} className=\"grid grid-cols-8 border-b last:border-b-0\">\n              <div className=\"border-r p-2 text-sm font-medium bg-gray-100 text-gray-700 flex items-center justify-center\">\n                {time.replace(':', 'h')}\n              </div>\n              {days.map(day => {\n                const isSelected = [...availabilities, ...unsavedAvailabilities]\n                  .some(slot => slot.day === day && slot.time === time);\n                const isSaved = availabilities\n                  .some(slot => slot.day === day && slot.time === time);\n                const hasCourse = courses\n                  .some(c => c.day === day && c.time === time);\n                const isAvailable = availabilities\n                  .some(slot => slot.day === day && slot.time === time);\n\n                return (\n                  <button\n                    key={`${day}-${time}`}\n                    onClick={() => !hasCourse && handleTimeSlotClick(day, time)}\n                    disabled={hasCourse || (mode === 'delete' && !isAvailable)}\n                    className={`\n                      border-r last:border-r-0 p-2 min-h-[30px] transition-all duration-200\n                      ${hasCourse \n                        ? 'bg-blue-100 cursor-not-allowed' \n                        : mode === 'delete' && selectedSlots.some(slot => slot.day === day && slot.time === time)\n                          ? 'bg-red-100 hover:bg-red-200 border-2 border-red-500'  // Sélectionné pour suppression\n                          : mode === 'add' && selectedSlots.some(slot => slot.day === day && slot.time === time)\n                            ? 'bg-emerald-50 hover:bg-emerald-100 border-2 border-emerald-500'  // Sélectionné pour ajout\n                            : isAvailable\n                              ? 'bg-emerald-100 hover:bg-emerald-200 border-l-4 border-emerald-500'  // Disponible\n                              : mode === 'add'\n                                ? 'hover:bg-emerald-50 cursor-pointer'  // Mode ajout\n                                : ''  // Mode normal\n                      }\n                      ${mode === 'delete' && !isAvailable ? 'cursor-not-allowed opacity-50' : ''}\n                    `}\n                  >\n                    {hasCourse && (\n                      <div className=\"text-xs bg-blue-200 text-blue-800 rounded-lg px-2 py-1\">\n                        Cours\n                      </div>\n                    )}\n                  </button>\n                );\n              })}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Légende */}\n      <div className=\"bg-white rounded-lg shadow p-4\">\n        <h3 className=\"font-medium mb-3 text-gray-700\">Légende</h3>\n        <div className=\"flex flex-wrap gap-6\">\n          <div className=\"flex items-center\">\n            <div className=\"w-6 h-6 bg-white border rounded-md mr-2\"></div>\n            <span className=\"text-sm text-gray-600\">Non disponible</span>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"w-6 h-6 bg-emerald-50 rounded-md mr-2\"></div>\n            <span className=\"text-sm text-gray-600\">Sélectionné (non sauvegardé)</span>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"w-6 h-6 bg-emerald-100 rounded-md mr-2 border-l-4 border-emerald-500\"></div>\n            <span className=\"text-sm text-gray-600\">Disponible (sauvegardé)</span>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"w-6 h-6 bg-red-50 rounded-md mr-2 border-l-4 border-red-500\"></div>\n            <span className=\"text-sm text-gray-600\">À supprimer</span>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"w-6 h-6 bg-blue-100 rounded-md mr-2\">\n              <div className=\"text-[8px] text-center text-blue-800 font-medium\">Cours</div>\n            </div>\n            <span className=\"text-sm text-gray-600\">Cours réservé</span>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"w-6 h-6 bg-yellow-100 rounded-md mr-2 border-2 border-yellow-500\"></div>\n            <span className=\"text-sm text-gray-600\">Sélectionné pour suppression</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Modal d'ajout */}\n      {showAddModal && (\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center\">\n          <div className=\"bg-white rounded-lg p-6 max-w-md w-full\">\n            <h3 className=\"text-lg font-medium mb-4\">Ajouter une disponibilité</h3>\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">Jour</label>\n                <select\n                  value={newSlot.day}\n                  onChange={(e) => setNewSlot({...newSlot, day: e.target.value})}\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n                >\n                  {days.map(day => (\n                    <option key={day} value={day}>{day}</option>\n                  ))}\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">Heure de début</label>\n                <input\n                  type=\"text\"\n                  value={newSlot.startTime.replace(':', 'h')}\n                  onChange={(e) => {\n                    const value = e.target.value.replace('h', ':');\n                    setNewSlot({...newSlot, startTime: value});\n                  }}\n                  placeholder=\"14h30\"\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">Heure de fin</label>\n                <input\n                  type=\"text\"\n                  value={newSlot.endTime.replace(':', 'h')}\n                  onChange={(e) => {\n                    const value = e.target.value.replace('h', ':');\n                    setNewSlot({...newSlot, endTime: value});\n                  }}\n                  placeholder=\"16h00\"\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n                />\n                <p className=\"mt-1 text-sm text-gray-500\">Durée minimale : 1h30</p>\n              </div>\n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  onClick={() => setShowAddModal(false)}\n                  className=\"px-4 py-2 border rounded-md text-gray-700 hover:bg-gray-50\"\n                >\n                  Annuler\n                </button>\n                <button\n                  onClick={handleAddAvailability}\n                  className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\"\n                >\n                  Ajouter\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Calendar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}